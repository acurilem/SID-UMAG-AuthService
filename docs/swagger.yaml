basePath: /api/v1/auth
consumes:
- application/json
definitions:
  forms.LoginForm:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  forms.RefreshTokenForm:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.Role:
    properties:
      cod_categoria:
        description: gorm.Model
        type: integer
      descripcion:
        type: string
      id_acceso:
        type: integer
    type: object
  models.User:
    properties:
      Apellidos:
        type: string
      Nombre:
        type: string
      Rut:
        type: string
      ap1_persona:
        type: string
      ap2_persona:
        type: string
      cod_persona:
        description: gorm.Model
        type: integer
      cod_sexo:
        type: integer
      des_sexo:
        type: string
      eschileno:
        type: string
      fecha_nac:
        type: string
      mail_institucional:
        type: string
      mail_opcional:
        type: string
      mail_sid:
        type: string
      nacionalidad:
        type: string
      nombre_completo:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
    type: object
  smaps.ErrorRes:
    properties:
      error:
        type: string
    type: object
  smaps.LoginModel:
    properties:
      refreshToken:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API Server para el serivicio de autenticación de usuarios con LDAP
    para el proyecto UMAG
  license:
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Servicio de autenticación UMAG
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Loggeo dentro del sistema que pasa por LDAP
      parameters:
      - description: RUT y contraseña del usuario
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/forms.LoginForm'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/smaps.LoginModel'
        "400":
          description: Datos enviados no cumplen con módelo
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
        "401":
          description: Credenciales inválidas LDAP / Sin info en SAYD
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
        "500":
          description: No se pudo generar el token
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
      summary: Loggear
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresco del token JWT
      parameters:
      - description: Token de refresco
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/forms.RefreshTokenForm'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/smaps.LoginModel'
        "401":
          description: Token de recuperación inválido
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
        "500":
          description: No se pudo regenerar el token
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
        "503":
          description: Error en el servidor
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
      summary: Refrescar token JWT
      tags:
      - auth
  /api/v1/auth/user:
    get:
      consumes:
      - application/json
      description: Obtener usuario por medio del token JWT en la cabecera Authorization
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Sin info en SAYD
          schema:
            $ref: '#/definitions/smaps.ErrorRes'
      summary: Obtener usuario
      tags:
      - auth
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: BearerJWTToken in Authorization Header
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Autenticación, refresco y sesión del usuario
  name: auth
